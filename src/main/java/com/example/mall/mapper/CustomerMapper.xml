<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mall.mapper.CustomerMapper">
	
	<!-- 오자윤 : /customer/myPage/edit/process 고객정보 수정 -->
	<update id="updateMyPage">
	    UPDATE customer c
	    LEFT OUTER JOIN address a ON c.customer_mail = a.customer_mail
	    <set>
	        <if test="customer.customerMail != null and customer.customerMail != ''">
	            c.customer_mail = #{customer.customerMail},
	        </if>
	        <if test="customer.customerPw != null and customer.customerPw != ''">
	            c.customer_pw = #{customer.customerPw},
	        </if>
	        <if test="address.addressDetail != null and address.addressDetail != ''">
	            a.address_detail = #{address.addressDetail},
	            a.update_date = NOW(),
	        </if>
	        c.update_date = NOW()
	    </set>
	    WHERE c.customer_mail = #{customer.customerMail}
	    <if test="address.addressNo != null">
	        AND a.address_no = #{address.addressNo}
	    </if>
	    <if test="address.addressNo == null and address.addressDetail != null and address.addressDetail != ''">
	        AND a.address_no = (SELECT address_no
	                           FROM address
	                           WHERE customer_mail = #{customer.customerMail}
	                           ORDER BY create_date DESC
	                           LIMIT 1)
	    </if>
	</update>
	
	<!-- 오자윤 : customerList 에 고객 검색시 -->
	<select id="searchByEmail" resultType="com.example.mall.vo.Customer">
		SELECT customer_mail customerMail,
			customer_birth customerBirth,
				create_date createDate
		FROM customer
		WHERE customer_mail = #{customerMail}
	</select>

	<!--  우정 : 고객 회원가입  -->
	<insert id="insertCustomer" parameterType="com.example.mall.vo.Customer">
	    INSERT INTO customer (customer_mail, customer_pw, customer_birth, customer_gender, create_date, update_date)
	    VALUES (#{customerMail}, #{customerPw}, #{customerBirth}, #{customerGender}, NOW(), NOW());
	</insert>
	
	<!-- 우정 : 고객 로그인 -->
	<select id = "login" parameterType="com.example.mall.vo.Customer"
         resultType="com.example.mall.vo.Customer">
      SELECT 
         customer_mail customerMail
         , customer_pw customerPw
      FROM customer
      WHERE customer_mail = #{customerMail} AND customer_pw = #{customerPw}
   </select>
   
   <!--  오자윤 : 개별 고객 상세정보 -->
	<select id="selectCustomerOne" parameterType="String" resultType="map">
	  SELECT c.customer_mail customerMail,
	  	c.customer_pw customerPw,
        c.customer_birth customerBirth,
        c.customer_gender customerGender,
        c.create_date createDate,
        c.update_date updateDate,
        a.address_detail addressDetail
        FROM customer c
        LEFT OUTER JOIN address a
        ON c.customer_mail = a.customer_mail
        WHERE c.customer_mail=#{customerMail}
	</select>
	
	<!-- 오자윤 : 고객 삭제 쿼리 -->
	<delete id="deleteCustomer" parameterType="String">
		DELETE FROM customer
		WHERE customer_mail = #{customerMail}
	</delete>

	<!-- 오자윤 : 고객리스트 가져오기 -->
    <select id="selectCustomerList" resultType="com.example.mall.vo.Customer">
        SELECT customer_mail customerMail
        , customer_pw customerPw
		, customer_birth customerBirth
		, customer_gender customerGender
		, update_date updateDate
		, create_date createDate
		FROM customer
		LIMIT #{beginRow}, #{rowPerPage}
    </select>
    
    <!-- 오자윤 : 고객리스트 카운트 -->
     <select id="countCustomerList" resultType="int">
        SELECT COUNT(*) FROM customer
    </select>
    
</mapper>